[{"C:\\INFO\\INFOdation\\ReactJSHooks\\demo-reacthook\\src\\App.js":"1","C:\\INFO\\INFOdation\\ReactJSHooks\\demo-reacthook\\src\\reportWebVitals.js":"2","C:\\INFO\\INFOdation\\ReactJSHooks\\demo-reacthook\\src\\components\\ColorBox\\index.jsx":"3","C:\\INFO\\INFOdation\\ReactJSHooks\\demo-reacthook\\src\\components\\TodoList\\index.jsx":"4","C:\\INFO\\INFOdation\\ReactJSHooks\\demo-reacthook\\src\\components\\TodoForm\\index.jsx":"5","C:\\INFO\\INFOdation\\ReactJSHooks\\demo-reacthook\\src\\components\\PostList\\index.jsx":"6"},{"size":2420,"mtime":1606388357384,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"8"},{"size":1821,"mtime":1606286971190,"results":"10","hashOfConfig":"8"},{"size":1814,"mtime":1606292371567,"results":"11","hashOfConfig":"8"},{"size":928,"mtime":1606294927882,"results":"12","hashOfConfig":"8"},{"size":463,"mtime":1606388079126,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},"4wcrds",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\INFO\\INFOdation\\ReactJSHooks\\demo-reacthook\\src\\App.js",["27","28","29","30"],"import { useEffect, useState } from 'react';\nimport './App.scss';\nimport PostList from './components/PostList';\nimport TodoForm from './components/TodoForm';\nimport TodoList from './components/TodoList';\n\nfunction App() {\n  // const [todoList, setTodoList] = useState([\n  //   { id: 1, title: 'I love easy FE' },\n  //   { id: 2, title: 'We love easy FE' },\n  //   { id: 3, title: 'They love easy FE' }\n  // ]);\n\n  // function handleTodoClick(todo) {\n  //   const index = todoList.findIndex(x => x.id === todo.id);\n  //   if (index < 0) {\n  //     return\n  //   }\n  //   const newTodoList = [...todoList];\n  //   newTodoList.splice(index, 1);\n  //   setTodoList(newTodoList);\n  // }\n\n  // return (\n  //   <div className=\"app\">\n  //     <h1>React Hooks</h1>\n  //     <TodoList todos={todoList} onTodoClick={handleTodoClick} />\n  //   </div>\n  // );\n\n  const [postList, setPostList] = useState([]);\n\n  useEffect(() => {\n    async function fetchPostList() {\n      try {\n        const requestUrl = 'http://js-post-api.herokuapp.com/api/posts?_limit=10&_page=1';\n        const response = await fetch(requestUrl);\n        const responseJSON = await response.json();\n        console.log({ responseJSON });\n\n        const { data } = responseJSON;\n        setPostList(data);\n      } catch (error) {\n        console.log('Failed to fetch: ', error.message);\n      }\n    }\n    console.log('Post list');\n    fetchPostList()\n  }, []); // once time\n\n  useEffect(() => {\n    console.log('Todo list');\n  })\n\n  const [todoList, setTodoList] = useState([\n    { id: 1, title: 'I love easy FE' },\n    { id: 2, title: 'We love easy FE' },\n    { id: 3, title: 'They love easy FE' }\n  ])\n\n  function handleTodoClick(todo) {\n    const index = todoList.findIndex(x => x.id === todo.id)\n    if (index < 0) {\n      return\n    }\n    const newTodoList = [...todoList];\n    newTodoList.splice(index, 1)\n    setTodoList(newTodoList)\n  }\n\n  function handleTodoFormSubmit(formValues) {\n    const newTodo = {\n      id: Math.random() * 10,\n      ...formValues\n    }\n    const newTodoList = [...todoList];\n    newTodoList.push(newTodo);\n    setTodoList(newTodoList)\n  }\n\n  return (\n    <div>\n      <h1>Post List</h1>\n\n      <PostList posts={postList} />\n\n      {/* <h1>TodoList</h1> */}\n      {/* <TodoForm onSubmit={handleTodoFormSubmit} /> */}\n      {/* <TodoList todos={todoList} onTodoClick={handleTodoClick} /> */}\n    </div>\n  )\n}\n\nexport default App;\n","C:\\INFO\\INFOdation\\ReactJSHooks\\demo-reacthook\\src\\reportWebVitals.js",[],"C:\\INFO\\INFOdation\\ReactJSHooks\\demo-reacthook\\src\\components\\ColorBox\\index.jsx",[],"C:\\INFO\\INFOdation\\ReactJSHooks\\demo-reacthook\\src\\components\\TodoList\\index.jsx",[],"C:\\INFO\\INFOdation\\ReactJSHooks\\demo-reacthook\\src\\components\\TodoForm\\index.jsx",[],"C:\\INFO\\INFOdation\\ReactJSHooks\\demo-reacthook\\src\\components\\PostList\\index.jsx",[],{"ruleId":"31","severity":1,"message":"32","line":4,"column":8,"nodeType":"33","messageId":"34","endLine":4,"endColumn":16},{"ruleId":"31","severity":1,"message":"35","line":5,"column":8,"nodeType":"33","messageId":"34","endLine":5,"endColumn":16},{"ruleId":"31","severity":1,"message":"36","line":61,"column":12,"nodeType":"33","messageId":"34","endLine":61,"endColumn":27},{"ruleId":"31","severity":1,"message":"37","line":71,"column":12,"nodeType":"33","messageId":"34","endLine":71,"endColumn":32},"no-unused-vars","'TodoForm' is defined but never used.","Identifier","unusedVar","'TodoList' is defined but never used.","'handleTodoClick' is defined but never used.","'handleTodoFormSubmit' is defined but never used."]